{"version":3,"sources":["components/Movie/Movie.module.css","components/Actor/Actor.module.css","containers/Layout/Layout.module.css","dto.ts","utils/generic-utils.ts","hoc/Can.tsx","components/Actor/Actor.tsx","services/axios.ts","services/axios-movies.ts","services/axios-actors.ts","components/ActorForm/ActorForm.tsx","containers/Actors/Actors.tsx","containers/Layout/Layout.tsx","components/Movie/Movie.tsx","utils/dateutils.ts","components/MovieForm/MovieForm.tsx","containers/Movies/Movies.tsx","containers/Home/Home.tsx","containers/UserProfile/UserProfile.tsx","App.tsx","serviceWorker.ts","index.tsx","containers/Home/Home.module.css","containers/UserProfile/UserProfile.module.css"],"names":["module","exports","Gender","getGenderDisplayString","gender","Male","Female","withAuth0","props","auth0","isAuthenticated","getAccessTokenSilently","useState","canPerform","setCanPerform","useEffect","a","token","payload","jwtDecode","json","Array","isArray","permissions","userPermissions","permissionsToCheck","hasPermission","every","permissionToCheck","indexOf","children","Actor","movies","data","map","movie","Badge","key","id","variant","className","title","Card","classes","Body","Title","name","Text","age","Footer","Link","href","onClick","onEdit","onDelete","instance","axios","create","headers","interceptors","response","use","error","console","log","fetchMovies","get","then","catch","fetchActors","withRouter","actor","initialAge","initialGender","Unknown","initialSelectedMovies","value","label","setError","setName","setAge","setGender","allMovies","setAllMovies","selectedMovies","setSelectedMovies","movieOptions","results","Modal","show","onHide","onClose","active","Header","closeButton","isEditing","Alert","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","target","as","custom","isMulti","selectedOptions","options","Button","updatedActor","patch","updateActor","e","message","post","createActor","initialAlertState","visible","alertData","setAlertData","allActors","setActorItems","modalData","setModalData","axiosActors","onActorDeleteClicked","actorToDelete","delete","updatedItems","filter","alertType","cardDesks","forEach","actorItem","length","push","noActorsPlaceHolder","Col","modal","Row","md","size","cards","index","CardDeck","useAuth0","user","loginWithRedirect","logout","navLinks","to","activeClassName","signInControls","NavDropdown","Item","history","returnTo","window","location","origin","client_id","Container","Layout","Navbar","bg","Brand","Toggle","aria-controls","Collapse","Nav","Movie","actors","releaseDate","Release_Date","join","timestampInSeconds","isNaN","date","Date","getFullYear","getMonth","getDate","release_date","Subtitle","initialReleaseDate","initialSelectedActors","setReleaseDate","setTitle","setAllActors","selectedActors","setSelectedActors","actorOptions","selected","selectedDate","rows","updatedMovie","Math","round","getTime","updateMovie","createMovie","movieItems","setMovieItems","axiosMovies","onMovieDeleteClicked","movieToDelete","updatedMovieItems","movieItem","noMoviesPlaceHolder","Home","HomeImageContainer","headerTextContainer","HeadingPrimary","HeadingPrimaryMain","HeadingPrimarySub","LoginButton","setToken","copied","setCopied","resetCopiedFlagTimer","userProfile","sm","email","nickname","Token","copyAction","text","onCopy","clearTimeout","setTimeout","copyIcon","color","copiedAlert","App","defaults","common","routes","exact","path","component","Movies","Actors","UserProfile","Boolean","hostname","match","ReactDOM","render","StrictMode","domain","clientId","audience","redirectUri","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f82a9acf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Movie\":\"Movie_Movie__32w0m\",\"Release_Date\":\"Movie_Release_Date__3_Fur\",\"ActionButtons\":\"Movie_ActionButtons__3ZhgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Actor\":\"Actor_Actor__M5RvJ\",\"ActionButtons\":\"Actor_ActionButtons__3CY9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__37MHr\"};","export enum Gender {\n  Male = 'M',\n  Female = 'F',\n  Unknown = 'U'\n}\n\nexport interface ActorDto {\n  id: number;\n  name: string;\n  age: number;\n  gender: Gender;\n  movies: MovieDto[];\n}\n\nexport interface ActorPostRequestDto {\n  id?: number;\n  name: string;\n  age: number;\n  gender: Gender;\n  movies?: number[];\n}\n\nexport interface ActorListResultDto {\n  count: number;\n  results: ActorDto[];\n}\n\nexport interface MovieDto {\n  id: number;\n  title: string;\n  release_date?: number;\n  actors?: ActorDto[]\n}\n\nexport interface MoviePostRequestDto {\n  id?: number;\n  title: string;\n  release_date?: number;\n  actors: number[];\n}\n\nexport interface MovieListResultDto {\n  count: number;\n  results: MovieDto[]\n}\n\nexport interface MoviesProps{\n}\n\nexport interface ActorsProps{\n}\n\nexport interface ModalData<T> {\n  visible: boolean;\n  isEditing: boolean;\n  data?: T;\n}\n\nexport interface AlertData {\n  visible: boolean;\n  alertType?:   'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark';\n  message?: string;\n}","import { Gender } from '../dto';\n\nexport function getGenderDisplayString(gender: Gender) {\n  switch(gender) {\n    case Gender.Male:\n      return 'Male';\n    case Gender.Female:\n      return 'Female';\n    default:\n      return 'Unknown';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { withAuth0, WithAuth0Props } from '@auth0/auth0-react';\nimport {decode as jwtDecode } from 'jsonwebtoken';\nimport isString from 'lodash/isString';\n\nexport interface CanProps {\n  permissions: string[],\n  action?: 'hide' | 'disable'\n}\n\nconst Can = (props: React.PropsWithChildren<WithAuth0Props & CanProps>) => {\n  const { isAuthenticated, getAccessTokenSilently } = props.auth0;\n  const [ canPerform, setCanPerform ] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      const token = await getAccessTokenSilently();\n      const payload = jwtDecode(token, { json: true });\n      if (!payload || !Array.isArray(payload.permissions)) {\n        setCanPerform(false);\n      }\n\n      const userPermissions: string[] = (payload ? payload.permissions : []) || [];\n      const permissionsToCheck = props.permissions || [];\n      const hasPermission = permissionsToCheck.every(permissionToCheck => {\n        return userPermissions.indexOf(permissionToCheck) > -1;\n      });\n\n      setCanPerform(hasPermission);\n\n    })();\n  }, [isAuthenticated, getAccessTokenSilently, props.permissions])\n\n  return (\n    <>\n      { canPerform ? props.children : null }\n    </>\n  );\n};\n\nexport default withAuth0(Can);","import React from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { ActorDto, MovieDto, Gender } from \"../../dto\";\nimport classes from \"./Actor.module.css\";\nimport { getGenderDisplayString } from \"../../utils/generic-utils\";\nimport Can from \"../../hoc/Can\";\n\nexport interface ActorProps {\n  data: ActorDto;\n  onEdit: (id: number) => void;\n  onDelete: (id: number) => void;\n}\n\nconst Actor = (props: React.PropsWithChildren<ActorProps>) => {\n  const movies = (props.data.movies || []).map((movie: MovieDto) => (\n    <Badge key={movie.id} variant=\"info\" className=\"mr-2\">\n      {movie.title}\n    </Badge>\n  ));\n\n  return (\n    <Card className={classes.Actor + \" shadow bg-white rounded \"}>\n      <Card.Body>\n        <Card.Title>{props.data?.name}</Card.Title>\n        <Card.Text>\n          <span className=\"mr-2\">Age</span>\n          <span>{props.data.age}</span>\n        </Card.Text>\n        <Card.Text>\n          <span className=\"mr-2\">Gender</span>\n          <span>{getGenderDisplayString(props.data.gender)}</span>\n        </Card.Text>\n        <Card.Text>{movies}</Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Can permissions={[\"update:actors\"]}>\n          <Card.Link href=\"#\" onClick={() => props.onEdit(props.data.id)}>\n            Edit\n          </Card.Link>\n        </Can>\n        <Can permissions={[\"delete:actors\"]}>\n          <Card.Link href=\"#\" onClick={() => props.onDelete(props.data.id)}>\n            Delete\n          </Card.Link>\n        </Can>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default Actor;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  headers: {\n    'Authrization': 'xxxxxx'\n  }\n});\n\ninstance.interceptors.response.use(\n  response => response,\n  error => {\n    console.log(error);\n      throw error;\n  });\n\nexport default instance;","import axios from './axios';\nimport { MovieListResultDto, MoviePostRequestDto, MovieDto } from '../dto';\n\nconst MOVIES_BASE_URL = '/api/movies';\n\nexport function fetchMovies(): Promise<MovieListResultDto> {\n  return axios.get(MOVIES_BASE_URL)\n    .then(response => {\n      return response.data\n    }).catch(error => {\n      console.log(error);\n      throw error;\n    });\n}\n\nexport function createMovie(movie: MoviePostRequestDto): Promise<MovieDto> {\n  return axios.post(MOVIES_BASE_URL, movie);\n}\n\nexport function updateMovie(id: number, movie: MoviePostRequestDto): Promise<MovieDto> {\n  return axios.patch(`${MOVIES_BASE_URL}/${id}` , movie);\n}\n\nexport function deleteMovie(id: number): Promise<any> {\n  return axios.delete(MOVIES_BASE_URL + `/${id}`)\n    .then(response => response);\n}","import axios from './axios';\nimport { ActorListResultDto, ActorPostRequestDto, ActorDto } from '../dto';\n\nconst ACTORS_BASE_URL = '/api/actors';\n\nexport function fetchActors(): Promise<ActorListResultDto> {\n  return axios.get(ACTORS_BASE_URL)\n    .then(response => {\n      return response.data\n    });\n}\n\nexport function createActor(actor: ActorPostRequestDto): Promise<ActorDto> {\n  return axios.post(ACTORS_BASE_URL, actor);\n}\n\nexport function updateActor(id: number, actor: ActorPostRequestDto): Promise<ActorDto> {\n  return axios.patch(`${ACTORS_BASE_URL}/${id}` , actor);\n}\n\nexport function deleteActor(id: number): Promise<any> {\n  return axios.delete(ACTORS_BASE_URL + `/${id}`)\n    .then(response => response);\n}","import 'react-datepicker/dist/react-datepicker.css';\n\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport FocusTrap from 'react-focus-trap';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport Select, { ValueType } from 'react-select';\n\nimport { ActorDto, ActorListResultDto, ActorPostRequestDto, Gender, MovieDto, MovieListResultDto } from '../../dto';\nimport { getGenderDisplayString } from '../../utils/generic-utils';\nimport { fetchMovies } from '../../services/axios-movies';\nimport Alert from 'react-bootstrap/Alert';\nimport { createActor, updateActor } from '../../services/axios-actors';\n\nexport interface ActorFormProps {\n  show: boolean;\n  isEditing?: boolean;\n  data?: ActorDto;\n  onClose: () => void;\n}\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst ActorForm = (\n  props: React.PropsWithChildren<ActorFormProps> & RouteComponentProps\n) => {\n  const actor = props.data || null;\n  const initialAge = (actor && actor.age) || 0;\n  const initialGender = (actor && actor.gender) || Gender.Unknown;\n  const initialSelectedMovies = ((actor && actor.movies) || []).map((movie) => ({ value: movie.id, label: movie.title }));\n\n  const [error, setError] = useState<string>('');\n  const [name, setName] = useState<string>((actor && actor.name) || \"\");\n  const [age, setAge] = useState<number>(initialAge);\n  const [gender, setGender] = useState<Gender>(initialGender);\n  const [allMovies, setAllMovies] = useState<OptionType[]>(initialSelectedMovies);\n  const [selectedMovies, setSelectedMovies] = useState<OptionType[]>(initialSelectedMovies);\n\n  useEffect(() => {\n    fetchMovies()\n      .then((response: MovieListResultDto) => {\n        const movieOptions: OptionType[] = response.results.map((movie) => ({\n          value: movie.id,\n          label: movie.title,\n        }));\n        setAllMovies(movieOptions);\n      });\n  }, []);\n\n  const handleMovieSelectionChange = (\n    selectedOptions: ValueType<OptionType>\n  ) => {\n    setSelectedMovies(selectedOptions as OptionType[]);\n  };\n\n  const onSubmit = () => {\n    const updatedActor: ActorPostRequestDto = {\n      name: name,\n      age: age, // Time in seconds\n      gender: gender,\n      movies: (selectedMovies || []).map((movie: OptionType) => movie.value),\n    };\n\n    const id = actor?.id || 0;\n    if (props.isEditing) {\n      updateActor(id, updatedActor)\n        .then(() => {\n          props.onClose();\n        })\n        .catch((e) =>{\n          setError('Failed to update actor.' + e.message);\n        });\n    } else {\n      createActor(updatedActor)\n        .then(() => {\n          props.onClose();\n        })\n        .catch((e) =>{\n          setError('Failed to update actor.' + e.message);\n        });\n    }\n  };\n\n  return (\n    <Modal show={props.show} onHide={props.onClose}>\n      <FocusTrap active={props.show}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.isEditing ? 'Edit Actor' : 'Add Actor'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { error ? <Alert variant={'danger'}>{error}</Alert> : null }\n          <Form>\n            <Form.Group controlId=\"actorForm.name\">\n              <Form.Label>Actor Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                placeholder=\"Enter Actor Name\"\n                onChange={(event) => setName(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"actorForm.age\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={age || 0}\n                placeholder=\"Enter Actor Age\"\n                onChange={(event) => setAge(+event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.gender\">\n              <Form.Label>Gender</Form.Label>\n              <Form.Control as=\"select\" value={gender} onChange={(event) => setGender(event.target.value as Gender)} custom>\n                <option value={Gender.Male}>{getGenderDisplayString(Gender.Male)}</option>\n                <option value={Gender.Female}>{getGenderDisplayString(Gender.Female)}</option>\n                <option value={Gender.Unknown}>{getGenderDisplayString(Gender.Unknown)}</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"actorForm.movies\">\n              <Form.Label>Movies</Form.Label>\n              <Select\n                isMulti\n                value={selectedMovies as ValueType<OptionType>}\n                onChange={handleMovieSelectionChange}\n                options={allMovies}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.onClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={onSubmit}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </FocusTrap>\n    </Modal>\n  );\n};\n\nexport default withRouter(ActorForm);\n","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Alert from 'react-bootstrap/Alert';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport Actor from '../../components/Actor/Actor';\nimport { ActorDto, ActorsProps, ModalData, AlertData } from '../../dto';\nimport ActorForm from '../../components/ActorForm/ActorForm';\nimport * as axiosActors from '../../services/axios-actors';\nimport Can from '../../hoc/Can';\n\nconst initialAlertState: AlertData = {visible: false };\n\nconst Actors = (props: React.PropsWithChildren<ActorsProps> & RouteComponentProps<{id?: string|undefined}>) => {\n  const [alertData, setAlertData] = useState<AlertData>(initialAlertState)\n  const [allActors, setActorItems] = useState<ActorDto[]>([]);\n  const [modalData, setModalData] = useState<ModalData<ActorDto>>({\n    visible: false,\n    isEditing: false\n  });\n\n  useEffect(() => {\n      axiosActors.fetchActors().then(data => {\n        setActorItems(data.results);\n      })\n  }, [modalData.visible]);\n\n  const onActorAddClicked = () => {\n    setModalData({\n      ...modalData,\n      visible: true,\n      isEditing: false\n    });\n  };\n\n  const onActorEditClicked = (actor: ActorDto) => setModalData({\n    ...modalData,\n    visible: true,\n    isEditing: true,\n    data: actor\n  });\n\n  const onActorDeleteClicked = (actorToDelete: ActorDto) => {\n    axiosActors.deleteActor(actorToDelete.id)\n      .then(() => {\n        const updatedItems = allActors.filter(actor => actor.id !== actorToDelete.id);\n        setActorItems(updatedItems);\n        setAlertData({\n          visible: true,\n          message: `Movie '${actorToDelete.name}' deleted successfully`,\n          alertType: 'success'\n        });\n      }).catch((error) => {\n        setAlertData({\n          visible: true,\n          alertType: 'danger',\n          message: error.message\n        });\n      });\n  };\n\n  const handleModalClose = () => {\n    setModalData({\n      visible: false,\n      isEditing: false\n    });\n\n  };\n\n  const NUM_OF_CARD_PER_ROW = 3;\n  const cardDesks: Array<JSX.Element[]> = [[]];\n  allActors.forEach((actorItem: ActorDto) => {\n    if (cardDesks[cardDesks.length - 1].length >= NUM_OF_CARD_PER_ROW) {\n      cardDesks.push([]);\n    }\n    cardDesks[cardDesks.length - 1].push(\n      <Actor\n        key={actorItem.id}\n        data={actorItem}\n        onEdit={() => onActorEditClicked(actorItem)}\n        onDelete={() => onActorDeleteClicked(actorItem)}\n      >\n        {actorItem.name}\n      </Actor>\n    );\n  });\n\n  const noActorsPlaceHolder = (\n    <Col> No Actors Found </Col>\n  );\n\n  const modal = modalData.visible ? (\n    <ActorForm show={modalData.visible} isEditing={modalData.isEditing} onClose={handleModalClose} data={modalData.data}></ActorForm>\n  ) : null;\n\n  return (\n    <>\n      <Row>\n        <Can permissions={[\"create:actors\"]}>\n          <Col md=\"auto\">\n            <Button variant=\"primary\" size=\"lg\" className='mb-3' onClick={onActorAddClicked}>Add Actor</Button>\n          </Col>\n        </Can>\n        <Col>\n          {alertData.visible ? <Alert key={1} variant={alertData.alertType || 'primary'}>{alertData.message}</Alert> : null }\n        </Col>\n      </Row>\n      {\n        allActors.length > 0 ?  cardDesks.map((cards, index) => {\n          return (\n            <CardDeck key={index} className=\"mt-3\">\n              {cards}\n            </CardDeck>\n          );\n        }) : noActorsPlaceHolder\n      }\n      {modal}\n    </>\n  );\n};\n\nexport default withRouter(Actors);","import React, { useState, useEffect } from 'react';\nimport { NavLink, Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport classes from './Layout.module.css';\nimport { useAuth0, IdToken } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\n\nconst Layout = (props: React.PropsWithChildren<RouteComponentProps>) => {\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  const userProfileClicked = () => {\n    props.history.push('/userprofile');\n  }\n\n  const navLinks = isAuthenticated ? (\n  <>\n    <NavLink to=\"/movies\" className=\"nav-link\" activeClassName={'active'}>Movies</NavLink>\n    <NavLink to=\"/actors\" className=\"nav-link\" activeClassName={'active'}>Actors</NavLink>\n   </>\n   ) : null;\n\n  const signInControls = isAuthenticated ?\n    (<>\n      <NavDropdown title={user ? user.name : 'Unknown' } id=\"collasible-nav-dropdown\">\n        <NavDropdown.Item onClick={() => userProfileClicked()}>View Profile</NavDropdown.Item>\n        <NavDropdown.Item onClick={() => logout({returnTo: window.location.origin, client_id: 'IrrwsvDC9WQZ404zksQ0ALJsbKGZwX4m' })}>Logout</NavDropdown.Item>\n      </NavDropdown>\n    </>) : <Button onClick={() => loginWithRedirect()} variant=\"dark\">Log In</Button>\n\n  return (\n    <Container className={classes.Layout + ' ' + 'shadow'}>\n      <Navbar bg=\"dark\"  variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Casting Agency</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {navLinks}\n          </Nav>\n          <Nav>\n            { signInControls }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <div className={'container-fluid pt-4'}>\n        {props.children}\n      </div>\n    </Container>\n  );\n};\n\nexport default withRouter(Layout);","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from \"react-bootstrap/Badge\";\nimport { MovieDto, ActorDto } from \"../../dto\";\nimport classes from \"./Movie.module.css\";\nimport { Link, NavLink } from 'react-router-dom';\nimport { getDate } from '../../utils/dateutils';\nimport Can from '../../hoc/Can';\n\nexport interface MovieProps {\n  data: MovieDto;\n  onEdit: (id: number) => void;\n  onDelete: (id: number) => void;\n}\n\nconst Movie = (props: React.PropsWithChildren<MovieProps>) => {\n  const actors = (props.data.actors || []).map((actor: ActorDto) => (\n    <Badge key={actor.id} variant=\"info\" className=\"mr-2\">{actor.name}</Badge>\n  ));\n\n  const releaseDate = (\n    <span className={[classes.Release_Date, \"pt-1\"].join(\" \")}>\n      Release Date: {getDate(props.data.release_date)}\n    </span>\n  );\n\n  return (\n      <Card className={classes.Movie + ' shadow bg-white rounded '}>\n        <Card.Body>\n          <Card.Title>{props.data?.title}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            {releaseDate}\n          </Card.Subtitle>\n          <Card.Text>\n            {actors}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <Can permissions={['update:movies']}>\n            <Card.Link href=\"#\" onClick={() => props.onEdit(props.data.id)}>Edit</Card.Link>\n          </Can>\n          <Can permissions={['delete:movies']}>\n            <Card.Link href=\"#\" onClick={() => props.onDelete(props.data.id)}>Delete</Card.Link>\n          </Can>\n        </Card.Footer>\n      </Card>\n  );\n};\n\nexport default Movie;\n","export const getDate = (timestampInSeconds: number = 0) => {\n  if (!isNaN(timestampInSeconds) && timestampInSeconds > 0) {\n    const date = new Date(timestampInSeconds * 1000); // convert in Milliseconds\n    return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\n  } else {\n    return \"N/A\";\n  }\n};","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport FocusTrap from 'react-focus-trap';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport Select, { ValueType } from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport { ActorListResultDto, MovieDto, MoviePostRequestDto } from '../../dto';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Alert from 'react-bootstrap/Alert';\nimport { createMovie, updateMovie } from '../../services/axios-movies';\nimport { fetchActors } from '../../services/axios-actors';\n\nexport interface MovieFormProps {\n  show: boolean;\n  isEditing?: boolean;\n  data?: MovieDto;\n  onClose: () => void;\n}\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst MovieForm = (\n  props: React.PropsWithChildren<MovieFormProps> & RouteComponentProps\n) => {\n  const movie = props.data || null;\n  const initialReleaseDate = (movie && movie.release_date) ? new Date(movie.release_date * 1000) : new Date(); // \"release_date\" in seconds, whereas Date expects milliseconds\n  const initialSelectedActors = (\n    (movie && movie.actors) ||\n    []\n  ).map((actor) => ({ value: actor.id, label: actor.name }));\n\n  const [error, setError] = useState<string>('');\n  const [releaseDate, setReleaseDate] = useState<Date>(initialReleaseDate)\n  const [title, setTitle] = useState<string>((movie && movie.title) || \"\");\n  const [allActors, setAllActors] = useState<OptionType[]>(\n    initialSelectedActors\n  );\n  const [selectedActors, setSelectedActors] = useState<OptionType[]>(\n    initialSelectedActors\n  );\n\n  useEffect(() => {\n    fetchActors().then((response: ActorListResultDto) => {\n        const actorOptions: OptionType[] = response.results.map((actor) => ({\n          value: actor.id,\n          label: actor.name,\n        }));\n        setAllActors(actorOptions);\n      });\n  }, []);\n\n  const handleActorSelectionChange = (\n    selectedOptions: ValueType<OptionType>\n  ) => {\n    setSelectedActors(selectedOptions as OptionType[]);\n  };\n\n  const onSubmit = () => {\n    setError('');\n    const updatedMovie: MoviePostRequestDto = {\n      title: title,\n      release_date: Math.round(releaseDate.getTime() / 1000), // Time in seconds\n      actors: (selectedActors || []).map((actor: OptionType) => actor.value),\n    };\n    const id = movie?.id || 0;\n    if (props.isEditing) {\n      updateMovie(id, updatedMovie)\n        .then(() => {\n          props.onClose();\n        })\n        .catch((e) =>{\n          setError('Failed to update movie.' + e.message);\n        });\n    } else {\n      createMovie(updatedMovie)\n        .then(() => {\n          props.onClose();\n        })\n        .catch((e) =>{\n          setError('Failed to update movie.' + e.message);\n        });\n    }\n  };\n\n  return (\n    <Modal show={props.show} onHide={props.onClose}>\n      <FocusTrap active={props.show}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.isEditing ? 'Edit Movie' : 'Add Movie'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { error ? <Alert variant={'danger'}>{error}</Alert> : null }\n          <Form>\n            <Form.Group controlId=\"movieForm.title\">\n              <Form.Label>Movie Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={title}\n                placeholder=\"Enter Movie Title\"\n                onChange={(event) => setTitle(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"movieForm.release_date\">\n              <Form.Label>Movie Title</Form.Label>\n              <DatePicker\n                selected={releaseDate}\n                onChange={(selectedDate: Date) => setReleaseDate(selectedDate)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"movieForm.actors\">\n              <Form.Label>Actors</Form.Label>\n              <Select\n                isMulti\n                value={selectedActors as ValueType<OptionType>}\n                onChange={handleActorSelectionChange}\n                options={allActors}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"movieForm.description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" rows={3} />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.onClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={onSubmit}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </FocusTrap>\n    </Modal>\n  );\n};\n\nexport default withRouter(MovieForm);\n","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Alert from 'react-bootstrap/Alert';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport Movie from '../../components/Movie/Movie';\nimport { MovieDto, MoviesProps, AlertData, ModalData } from '../../dto';\nimport MovieForm from '../../components/MovieForm/MovieForm';\nimport * as axiosMovies from '../../services/axios-movies';\nimport Can from '../../hoc/Can';\n\nconst initialAlertState: AlertData = {visible: false };\n\nconst Movies = (props: React.PropsWithChildren<MoviesProps> & RouteComponentProps<{id?: string|undefined}>) => {\n  const [alertData, setAlertData] = useState<AlertData>(initialAlertState)\n  const [movieItems, setMovieItems] = useState<MovieDto[]>([]);\n  const [modalData, setModalData] = useState<ModalData<MovieDto>>({\n    visible: false,\n    isEditing: false\n  });\n\n  useEffect(() => {\n      axiosMovies.fetchMovies().then(data => {\n        setMovieItems(data.results);\n      })\n  }, [modalData.visible]);\n\n  const onMovieAddClicked = () => {\n    setModalData({\n      ...modalData,\n      visible: true,\n      isEditing: false\n    });\n  };\n\n  const onMovieEditClicked = (movie: MovieDto) => setModalData({\n    ...modalData,\n    visible: true,\n    isEditing: true,\n    data: movie\n  });\n\n  const onMovieDeleteClicked = (movieToDelete: MovieDto) => {\n    axiosMovies.deleteMovie(movieToDelete.id)\n      .then(() => {\n        const updatedMovieItems = movieItems.filter(movie => movie.id !== movieToDelete.id);\n        setMovieItems(updatedMovieItems);\n        setAlertData({\n          visible: true,\n          message: `Movie '${movieToDelete.title}' deleted successfully`,\n          alertType: 'success'\n        });\n      }).catch((error) => {\n        setAlertData({\n          visible: true,\n          alertType: 'danger',\n          message: error.message\n        });\n      });\n  };\n\n  const handleModalClose = () => {\n    setModalData({\n      visible: false,\n      isEditing: false\n    });\n\n  };\n\n  const NUM_OF_CARD_PER_ROW = 3;\n  const cardDesks: Array<JSX.Element[]> = [[]];\n  movieItems.forEach((movieItem: MovieDto) => {\n    if (cardDesks[cardDesks.length - 1].length >= NUM_OF_CARD_PER_ROW) {\n      cardDesks.push([]);\n    }\n    cardDesks[cardDesks.length - 1].push(\n      <Movie\n        key={movieItem.id}\n        data={movieItem}\n        onEdit={() => onMovieEditClicked(movieItem)}\n        onDelete={() => onMovieDeleteClicked(movieItem)}\n      >\n        {movieItem.title}\n      </Movie>\n    );\n  });\n\n  const noMoviesPlaceHolder = (\n    <Col> No Movies Found </Col>\n  );\n\n  const modal = modalData.visible ? (\n    <MovieForm show={modalData.visible} isEditing={modalData.isEditing} onClose={handleModalClose} data={modalData.data}></MovieForm>\n  ) : null;\n\n  return (\n    <>\n      <Row>\n        <Can permissions={[\"create:movies\"]}>\n          <Col md=\"auto\">\n            <Button variant=\"primary\" size=\"lg\" className='mb-3' onClick={onMovieAddClicked}>Add Movie</Button>\n          </Col>\n        </Can>\n        <Col>\n          {alertData.visible ? <Alert key={1} variant={alertData.alertType || 'primary'}>{alertData.message}</Alert> : null }\n        </Col>\n      </Row>\n      {\n        movieItems.length > 0 ?  cardDesks.map((cards, index) => {\n          return (\n            <CardDeck key={index} className=\"mt-3\">\n              {cards}\n            </CardDeck>\n          );\n        }) : noMoviesPlaceHolder\n      }\n      {modal}\n    </>\n  );\n};\n\nexport default withRouter(Movies);","import React from 'react';\nimport classes from './Home.module.css';\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\n\nconst Home = (props: React.PropsWithChildren<any>) => {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <div className={classes.HomeImageContainer}>\n      <div className={classes.headerTextContainer}>\n        <h1 className={classes.HeadingPrimary}>\n            <span className={classes.HeadingPrimaryMain}>Casting Agency</span>\n            <span className={classes.HeadingPrimarySub}>Way to path forward</span>\n        </h1>\n        <Button variant=\"light\" className={classes.LoginButton} onClick={() => loginWithRedirect()}>Login</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { WithAuth0Props, withAuth0 } from '@auth0/auth0-react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport classes from './UserProfile.module.css';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { ClipboardPlus } from 'react-bootstrap-icons';\nimport Alert from 'react-bootstrap/esm/Alert';\n\nconst UserProfile = (props: React.PropsWithRef<WithAuth0Props & RouteComponentProps>) => {\n  const { isAuthenticated, user, getAccessTokenSilently } = props.auth0;\n  const [token, setToken] = useState<string>('');\n  const [ copied, setCopied ] = useState<boolean>(false);\n  let resetCopiedFlagTimer = 0;\n\n  useEffect(() => {\n    (async() => {\n      if (isAuthenticated) {\n        const token = await getAccessTokenSilently();\n        setToken(token);\n      }\n    })();\n  }, [isAuthenticated, getAccessTokenSilently]);\n\n  const markAsCopied = () => {\n    clearTimeout(resetCopiedFlagTimer);\n    setCopied(true);\n    resetCopiedFlagTimer = setTimeout(() => {\n      setCopied(false);\n      clearTimeout(resetCopiedFlagTimer);\n    }, 3000) as any;\n  }\n\n  let userProfile = null;\n  if (isAuthenticated && user) {\n    userProfile= (\n      <Container>\n        <Row>\n          <Col sm={3} md={2}>Name</Col>\n          <Col>{user.name}</Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col sm={3} md={2}>Email</Col>\n          <Col>{user.email || 'Not Set'}</Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col sm={3} md={2}>Nickname</Col>\n          <Col>{user.nickname || 'Not Set'}</Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col sm={3} md={2}>JWT Token</Col>\n          <Col>\n            <div className={classes.Token}>{ token }</div>\n            <div className={classes.copyAction}>\n            <CopyToClipboard text={token}\n              onCopy={() => markAsCopied()}>\n              <ClipboardPlus className={classes.copyIcon} size={24} color={copied ? 'green' : 'blue'}></ClipboardPlus>\n            </CopyToClipboard>\n            { copied ?\n              <Alert className={classes.copiedAlert} variant=\"success\">Copied To Clipboard</Alert>\n             : null }\n             </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      { userProfile }\n    </>\n  );\n};\n\nexport default withRouter(withAuth0(UserProfile));","import './App.css';\n\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport Actors from './containers/Actors/Actors';\nimport Layout from './containers/Layout/Layout';\nimport Movies from './containers/Movies/Movies';\nimport Home from './containers/Home/Home';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport axios from './services/axios';\nimport UserProfile from './containers/UserProfile/UserProfile';\n\nfunction App() {\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [token, setToken] = useState<string>('');\n  useEffect(() => {\n\n    (async() => {\n      if (isAuthenticated) {\n        const token = await getAccessTokenSilently();\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n        setToken(token);\n      }\n    })();\n  }, [isAuthenticated, getAccessTokenSilently])\n\n  const routes = isAuthenticated && token ? (\n    <>\n    <Switch>\n      <Route exact path=\"/movies\" component={Movies}></Route>\n      <Route exact path=\"/actors\" component={Actors}></Route>\n      <Route exact path=\"/userprofile\" component={UserProfile}></Route>\n      <Redirect to=\"/movies\"></Redirect>\n    </Switch>\n    </>\n  ) : <Home />;\n\n  return (\n    <Layout >\n      {routes}\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"ashishp-dev.us.auth0.com\"\n      clientId=\"IrrwsvDC9WQZ404zksQ0ALJsbKGZwX4m\"\n      audience=\"casting-agency-api\"\n      redirectUri={window.location.origin}\n    >\n      <BrowserRouter basename=\"/\">\n        <App />{\" \"}\n      </BrowserRouter>\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeImageContainer\":\"Home_HomeImageContainer__2GUUy\",\"HomeImage\":\"Home_HomeImage__2-Nc_\",\"headerTextContainer\":\"Home_headerTextContainer__3-LMo\",\"HeadingPrimary\":\"Home_HeadingPrimary__2PFIO\",\"HeadingPrimaryMain\":\"Home_HeadingPrimaryMain__2uzX4\",\"moveInLeft\":\"Home_moveInLeft__1gXYo\",\"HeadingPrimarySub\":\"Home_HeadingPrimarySub__1bCi0\",\"moveInRight\":\"Home_moveInRight__1X4v-\",\"LoginButton\":\"Home_LoginButton__14-XO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Token\":\"UserProfile_Token__3s79D\",\"copyAction\":\"UserProfile_copyAction__2GDpQ\",\"copyIcon\":\"UserProfile_copyIcon__tZWJD\"};"],"sourceRoot":""}