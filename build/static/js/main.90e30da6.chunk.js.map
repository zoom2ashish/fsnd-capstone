{"version":3,"sources":["components/Actor/Actor.module.css","dto.ts","utils/generic-utils.ts","components/Actor/Actor.tsx","services/axios.ts","services/axios-movies.ts","components/ActorForm/ActorForm.tsx","containers/Actors/Actors.tsx","services/axios-actors.ts","containers/Layout/Layout.tsx","components/Movie/Movie.tsx","utils/dateutils.ts","components/MovieForm/MovieForm.tsx","containers/Movies/Movies.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Movie/Movie.module.css"],"names":["module","exports","Gender","getGenderDisplayString","gender","Male","Female","Actor","props","movies","data","map","movie","Badge","key","id","variant","className","title","Card","classes","Body","Title","name","Text","age","Footer","Link","href","onClick","onEdit","onDelete","instance","axios","create","headers","interceptors","response","use","error","status","fetchMovies","get","then","withRouter","actor","initialAge","initialGender","Unknown","initialSelectedMovies","value","label","useState","setError","setName","setAge","setGender","allMovies","setAllMovies","selectedMovies","setSelectedMovies","useEffect","movieOptions","results","Modal","show","onHide","onClose","active","Header","closeButton","isEditing","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","target","as","custom","isMulti","selectedOptions","console","log","options","Button","updatedActor","url","fetch","method","body","JSON","stringify","catch","e","message","initialAlertState","visible","alertData","movieItems","setActorItems","modalData","setModalData","cardDesks","forEach","movieItem","length","push","noActorsPlaceHolder","Col","modal","Row","md","size","Alert","alertType","cards","index","CardDeck","Layout","Container","Navbar","bg","Brand","Toggle","aria-controls","Collapse","Nav","to","activeClassName","children","Movie","actors","releaseDate","Release_Date","join","timestampInSeconds","isNaN","date","Date","getFullYear","getMonth","getDate","release_date","Subtitle","initialReleaseDate","initialSelectedActors","setReleaseDate","setTitle","allActors","setAllActors","selectedActors","setSelectedActors","json","actorOptions","selected","selectedDate","rows","updatedMovie","Math","round","getTime","setAlertData","setMovieItems","axiosMovies","onMovieDeleteClicked","movieToDelete","delete","updatedMovieItems","filter","noMoviesPlaceHolder","App","routes","path","component","Movies","exact","Actors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90e30da6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Actor\":\"Actor_Actor__M5RvJ\",\"ActionButtons\":\"Actor_ActionButtons__3CY9E\"};","export enum Gender {\n  Male = 'M',\n  Female = 'F',\n  Unknown = 'U'\n}\n\nexport interface ActorDto {\n  id: number;\n  name: string;\n  age: number;\n  gender: Gender;\n  movies: MovieDto[];\n}\n\nexport interface ActorPostRequestDto {\n  id?: number;\n  name: string;\n  age: number;\n  gender: Gender;\n  movies?: number[];\n}\n\nexport interface ActorListResultDto {\n  count: number;\n  results: ActorDto[];\n}\n\nexport interface MovieDto {\n  id: number;\n  title: string;\n  release_date?: number;\n  actors?: ActorDto[]\n}\n\nexport interface MoviePostRequestDto {\n  id?: number;\n  title: string;\n  release_date?: number;\n  actors: number[];\n}\n\nexport interface MovieListResultDto {\n  count: number;\n  results: MovieDto[]\n}\n\nexport interface MoviesProps{\n}\n\nexport interface ActorsProps{\n}\n\nexport interface ModalData<T> {\n  visible: boolean;\n  isEditing: boolean;\n  data?: T;\n}\n\nexport interface AlertData {\n  visible: boolean;\n  alertType?:   'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark';\n  message?: string;\n}","import { Gender } from '../dto';\n\nexport function getGenderDisplayString(gender: Gender) {\n  switch(gender) {\n    case Gender.Male:\n      return 'Male';\n    case Gender.Female:\n      return 'Female';\n    default:\n      return 'Unknown';\n  }\n}\n","import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Card from 'react-bootstrap/Card';\n\nimport { ActorDto, MovieDto, Gender } from '../../dto';\nimport classes from './Actor.module.css';\nimport { getGenderDisplayString } from '../../utils/generic-utils';\n\nexport interface ActorProps {\n  data: ActorDto;\n  onEdit: (id: number) => void;\n  onDelete: (id: number) => void;\n}\n\nconst Actor = (props: React.PropsWithChildren<ActorProps>) => {\n  const movies = (props.data.movies || []).map((movie: MovieDto) => (\n    <Badge key={movie.id} variant=\"info\" className=\"mr-2\">{movie.title}</Badge>\n  ));\n\n  return (\n      <Card className={classes.Actor + ' shadow bg-white rounded '}>\n        <Card.Body>\n          <Card.Title>{props.data?.name}</Card.Title>\n          <Card.Text>\n            <span className=\"mr-2\">Age</span><span>{props.data.age}</span>\n          </Card.Text>\n          <Card.Text>\n            <span className=\"mr-2\">Gender</span><span>{getGenderDisplayString(props.data.gender)}</span>\n          </Card.Text>\n          <Card.Text>\n            {movies}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <Card.Link href=\"#\" onClick={() => props.onEdit(props.data.id)}>Edit</Card.Link>\n          <Card.Link href=\"#\" onClick={() => props.onDelete(props.data.id)}>Delete</Card.Link>\n        </Card.Footer>\n      </Card>\n  );\n};\n\nexport default Actor;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  headers: {\n    'Authrization': 'xxxxxx'\n  }\n});\n\ninstance.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response.status === 401) {\n    }\n  });\n\nexport default instance;","import axios from './axios';\nimport { MovieListResultDto } from '../dto';\n\nconst MOVIES_BASE_URL = '/api/movies';\n\nexport function fetchMovies(): Promise<MovieListResultDto> {\n  return axios.get(MOVIES_BASE_URL)\n    .then(response => {\n      return response.data\n    });\n}\n\n\nexport function deleteMovie(id: number): Promise<any> {\n  return axios.delete(MOVIES_BASE_URL + `/${id}`)\n    .then(response => response);\n}","import 'react-datepicker/dist/react-datepicker.css';\n\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport FocusTrap from 'react-focus-trap';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport Select, { ValueType } from 'react-select';\n\nimport { ActorDto, ActorListResultDto, ActorPostRequestDto, Gender, MovieDto, MovieListResultDto } from '../../dto';\nimport { getGenderDisplayString } from '../../utils/generic-utils';\nimport { fetchMovies } from '../../services/axios-movies';\n\nexport interface ActorFormProps {\n  show: boolean;\n  isEditing?: boolean;\n  data?: ActorDto;\n  onClose: () => void;\n}\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst ActorForm = (\n  props: React.PropsWithChildren<ActorFormProps> & RouteComponentProps\n) => {\n  const actor = props.data || null;\n  const initialAge = (actor && actor.age) || 0;\n  const initialGender = (actor && actor.gender) || Gender.Unknown;\n  const initialSelectedMovies = ((actor && actor.movies) || []).map((movie) => ({ value: movie.id, label: movie.title }));\n\n  const [error, setError] = useState<string>('');\n  const [name, setName] = useState<string>((actor && actor.name) || \"\");\n  const [age, setAge] = useState<number>(initialAge);\n  const [gender, setGender] = useState<Gender>(initialGender);\n  const [allMovies, setAllMovies] = useState<OptionType[]>(initialSelectedMovies);\n  const [selectedMovies, setSelectedMovies] = useState<OptionType[]>(initialSelectedMovies);\n\n  useEffect(() => {\n    fetchMovies()\n      .then((response: MovieListResultDto) => {\n        const movieOptions: OptionType[] = response.results.map((movie) => ({\n          value: movie.id,\n          label: movie.title,\n        }));\n        setAllMovies(movieOptions);\n      });\n  }, []);\n\n  const handleMovieSelectionChange = (\n    selectedOptions: ValueType<OptionType>\n  ) => {\n    console.log(\"selectedOptions=\", selectedOptions);\n    setSelectedMovies(selectedOptions as OptionType[]);\n  };\n\n  const onSubmit = () => {\n    const updatedActor: ActorPostRequestDto = {\n      name: name,\n      age: age, // Time in seconds\n      gender: gender,\n      movies: (selectedMovies || []).map((movie: OptionType) => movie.value),\n    };\n    const url = props.isEditing ? `/api/actors/${actor?.id}` : '/api/actors';\n    fetch(url, {\n      method: props.isEditing ? 'PATCH' : 'POST',\n      body: JSON.stringify(updatedActor)\n    }).then(() => {\n      props.onClose();\n    }).catch((e: Error) => {\n      setError('Failed to create movie.' + e.message);\n    });\n  };\n\n  return (\n    <Modal show={props.show} onHide={props.onClose}>\n      <FocusTrap active={props.show}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.isEditing ? 'Edit Actor' : 'Add Actor'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"actorForm.name\">\n              <Form.Label>Actor Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                placeholder=\"Enter Actor Name\"\n                onChange={(event) => setName(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"actorForm.age\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={age || 0}\n                placeholder=\"Enter Actor Age\"\n                onChange={(event) => setAge(+event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.gender\">\n              <Form.Label>Gender</Form.Label>\n              <Form.Control as=\"select\" value={gender} onChange={(event) => setGender(event.target.value as Gender)} custom>\n                <option value={Gender.Male}>{getGenderDisplayString(Gender.Male)}</option>\n                <option value={Gender.Female}>{getGenderDisplayString(Gender.Female)}</option>\n                <option value={Gender.Unknown}>{getGenderDisplayString(Gender.Unknown)}</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"actorForm.movies\">\n              <Form.Label>Movies</Form.Label>\n              <Select\n                isMulti\n                value={selectedMovies as ValueType<OptionType>}\n                onChange={handleMovieSelectionChange}\n                options={allMovies}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.onClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={onSubmit}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </FocusTrap>\n    </Modal>\n  );\n};\n\nexport default withRouter(ActorForm);\n","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Alert from 'react-bootstrap/Alert';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport Actor from '../../components/Actor/Actor';\nimport { ActorDto, ActorsProps, ModalData, AlertData } from '../../dto';\nimport ActorForm from '../../components/ActorForm/ActorForm';\nimport * as axiosActors from '../../services/axios-actors';\n\nconst initialAlertState: AlertData = {visible: false };\n\nconst Actors = (props: React.PropsWithChildren<ActorsProps> & RouteComponentProps<{id?: string|undefined}>) => {\n  const [alertData, setAlertData] = useState<AlertData>(initialAlertState)\n  const [movieItems, setActorItems] = useState<ActorDto[]>([]);\n  const [modalData, setModalData] = useState<ModalData<ActorDto>>({\n    visible: false,\n    isEditing: false\n  });\n\n  useEffect(() => {\n      axiosActors.fetchActors().then(data => {\n        setActorItems(data.results);\n      })\n  }, [modalData.visible]);\n\n  const onActorAddClicked = () => {\n    setModalData({\n      ...modalData,\n      visible: true,\n      isEditing: false\n    });\n  };\n\n  const onActorEditClicked = (actor: ActorDto) => setModalData({\n    ...modalData,\n    visible: true,\n    isEditing: true,\n    data: actor\n  });\n\n  const onActorEditDeleted = (id: number) => {\n    console.log('Actor Id Deleted', id);\n  };\n\n  const handleModalClose = () => {\n    setModalData({\n      visible: false,\n      isEditing: false\n    });\n\n  };\n\n  const NUM_OF_CARD_PER_ROW = 3;\n  const cardDesks: Array<JSX.Element[]> = [[]];\n  movieItems.forEach((movieItem: ActorDto) => {\n    if (cardDesks[cardDesks.length - 1].length >= NUM_OF_CARD_PER_ROW) {\n      cardDesks.push([]);\n    }\n    cardDesks[cardDesks.length - 1].push(\n      <Actor\n        key={movieItem.id}\n        data={movieItem}\n        onEdit={() => onActorEditClicked(movieItem)}\n        onDelete={() => onActorEditDeleted(movieItem.id)}\n      >\n        {movieItem.name}\n      </Actor>\n    );\n  });\n\n  const noActorsPlaceHolder = (\n    <Col> No Actors Found </Col>\n  );\n\n  const modal = modalData.visible ? (\n    <ActorForm show={modalData.visible} isEditing={modalData.isEditing} onClose={handleModalClose} data={modalData.data}></ActorForm>\n  ) : null;\n\n  return (\n    <>\n      <Row>\n        <Col md=\"auto\">\n          <Button variant=\"primary\" size=\"lg\" className='mb-3' onClick={onActorAddClicked}>Add Actor</Button>\n        </Col>\n        <Col>\n          {alertData.visible ? <Alert key={1} variant={alertData.alertType || 'primary'}>{alertData.message}</Alert> : null }\n        </Col>\n      </Row>\n      {\n        movieItems.length > 0 ?  cardDesks.map((cards, index) => {\n          return (\n            <CardDeck key={index} className=\"mt-3\">\n              {cards}\n            </CardDeck>\n          );\n        }) : noActorsPlaceHolder\n      }\n      {modal}\n    </>\n  );\n};\n\nexport default withRouter(Actors);","import axios from './axios';\nimport { ActorListResultDto } from '../dto';\n\nconst ACTORS_BASE_URL = '/api/actors';\n\nexport function fetchActors(): Promise<ActorListResultDto> {\n  return axios.get(ACTORS_BASE_URL)\n    .then(response => {\n      return response.data\n    });\n}\n\n\nexport function deleteActor(id: number): Promise<any> {\n  return axios.delete(ACTORS_BASE_URL + `/${id}`)\n    .then(response => response);\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport classes from './Layout.module.css';\n\nconst Layout = (props: React.Props<any>) => {\n  return (\n    <Container>\n      <Navbar bg=\"dark\"  variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Casting Agency</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink to=\"/movies\" className=\"nav-link\" activeClassName={'active'}>Movies</NavLink>\n            <NavLink to=\"/actors\" className=\"nav-link\" activeClassName={'active'}>Actors</NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <div className={'container-fluid pt-4'}>\n        {props.children}\n      </div>\n    </Container>\n  );\n};\n\nexport default Layout;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from \"react-bootstrap/Badge\";\nimport { MovieDto, ActorDto } from \"../../dto\";\nimport classes from \"./Movie.module.css\";\nimport { Link, NavLink } from 'react-router-dom';\nimport { getDate } from '../../utils/dateutils';\n\nexport interface MovieProps {\n  data: MovieDto;\n  onEdit: (id: number) => void;\n  onDelete: (id: number) => void;\n}\n\nconst Movie = (props: React.PropsWithChildren<MovieProps>) => {\n  const actors = (props.data.actors || []).map((actor: ActorDto) => (\n    <Badge key={actor.id} variant=\"info\" className=\"mr-2\">{actor.name}</Badge>\n  ));\n\n  const releaseDate = (\n    <span className={[classes.Release_Date, \"pt-1\"].join(\" \")}>\n      Release Date: {getDate(props.data.release_date)}\n    </span>\n  );\n\n  return (\n      <Card className={classes.Movie + ' shadow bg-white rounded '}>\n        <Card.Body>\n          <Card.Title>{props.data?.title}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            {releaseDate}\n          </Card.Subtitle>\n          <Card.Text>\n            {actors}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <Card.Link href=\"#\" onClick={() => props.onEdit(props.data.id)}>Edit</Card.Link>\n          <Card.Link href=\"#\" onClick={() => props.onDelete(props.data.id)}>Delete</Card.Link>\n        </Card.Footer>\n      </Card>\n  );\n};\n\nexport default Movie;\n","export const getDate = (timestampInSeconds: number = 0) => {\n  if (!isNaN(timestampInSeconds) && timestampInSeconds > 0) {\n    const date = new Date(timestampInSeconds * 1000); // convert in Milliseconds\n    return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\n  } else {\n    return \"N/A\";\n  }\n};","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport FocusTrap from 'react-focus-trap';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport Select, { ValueType } from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport { ActorListResultDto, MovieDto, MoviePostRequestDto } from '../../dto';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport interface MovieFormProps {\n  show: boolean;\n  isEditing?: boolean;\n  data?: MovieDto;\n  onClose: () => void;\n}\n\ntype OptionType = {\n  value: number;\n  label: string;\n};\n\nconst MovieForm = (\n  props: React.PropsWithChildren<MovieFormProps> & RouteComponentProps\n) => {\n  const movie = props.data || null;\n  const initialReleaseDate = (movie && movie.release_date) ? new Date(movie.release_date * 1000) : new Date(); // \"release_date\" in seconds, whereas Date expects milliseconds\n  const initialSelectedActors = (\n    (movie && movie.actors) ||\n    []\n  ).map((actor) => ({ value: actor.id, label: actor.name }));\n\n  const [error, setError] = useState<string>('');\n  const [releaseDate, setReleaseDate] = useState<Date>(initialReleaseDate)\n  const [title, setTitle] = useState<string>((movie && movie.title) || \"\");\n  const [allActors, setAllActors] = useState<OptionType[]>(\n    initialSelectedActors\n  );\n  const [selectedActors, setSelectedActors] = useState<OptionType[]>(\n    initialSelectedActors\n  );\n\n  useEffect(() => {\n    fetch(\"/api/actors\")\n      .then((response) => response.json())\n      .then((response: ActorListResultDto) => {\n        const actorOptions: OptionType[] = response.results.map((actor) => ({\n          value: actor.id,\n          label: actor.name,\n        }));\n        setAllActors(actorOptions);\n      });\n  }, []);\n\n  const handleActorSelectionChange = (\n    selectedOptions: ValueType<OptionType>\n  ) => {\n    console.log(\"selectedOptions=\", selectedOptions);\n    setSelectedActors(selectedOptions as OptionType[]);\n  };\n\n  const onSubmit = () => {\n    const updatedMovie: MoviePostRequestDto = {\n      title: title,\n      release_date: Math.round(releaseDate.getTime() / 1000), // Time in seconds\n      actors: (selectedActors || []).map((actor: OptionType) => actor.value),\n    };\n    const url = props.isEditing ? `/api/movies/${movie?.id}` : '/api/movies';\n    fetch(url, {\n      method: props.isEditing ? 'PATCH' : 'POST',\n      body: JSON.stringify(updatedMovie)\n    }).then(() => {\n      props.onClose();\n    }).catch((e: Error) => {\n      setError('Failed to create movie.' + e.message);\n    });\n  };\n\n  return (\n    <Modal show={props.show} onHide={props.onClose}>\n      <FocusTrap active={props.show}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.isEditing ? 'Edit Movie' : 'Add Movie'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"movieForm.title\">\n              <Form.Label>Movie Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={title}\n                placeholder=\"Enter Movie Title\"\n                onChange={(event) => setTitle(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"movieForm.release_date\">\n              <Form.Label>Movie Title</Form.Label>\n              <DatePicker\n                selected={releaseDate}\n                onChange={(selectedDate: Date) => setReleaseDate(selectedDate)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"movieForm.actors\">\n              <Form.Label>Actors</Form.Label>\n              <Select\n                isMulti\n                value={selectedActors as ValueType<OptionType>}\n                onChange={handleActorSelectionChange}\n                options={allActors}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"movieForm.description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" rows={3} />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.onClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={onSubmit}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </FocusTrap>\n    </Modal>\n  );\n};\n\nexport default withRouter(MovieForm);\n","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Alert from 'react-bootstrap/Alert';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport Movie from '../../components/Movie/Movie';\nimport { MovieDto, MoviesProps, AlertData, ModalData } from '../../dto';\nimport MovieForm from '../../components/MovieForm/MovieForm';\nimport * as axiosMovies from '../../services/axios-movies';\n\nconst initialAlertState: AlertData = {visible: false };\n\nconst Movies = (props: React.PropsWithChildren<MoviesProps> & RouteComponentProps<{id?: string|undefined}>) => {\n  const [alertData, setAlertData] = useState<AlertData>(initialAlertState)\n  const [movieItems, setMovieItems] = useState<MovieDto[]>([]);\n  const [modalData, setModalData] = useState<ModalData<MovieDto>>({\n    visible: false,\n    isEditing: false\n  });\n\n  useEffect(() => {\n      axiosMovies.fetchMovies().then(data => {\n        setMovieItems(data.results);\n      })\n  }, [modalData.visible]);\n\n  const onMovieAddClicked = () => {\n    setModalData({\n      ...modalData,\n      visible: true,\n      isEditing: false\n    });\n  };\n\n  const onMovieEditClicked = (movie: MovieDto) => setModalData({\n    ...modalData,\n    visible: true,\n    isEditing: true,\n    data: movie\n  });\n\n  const onMovieDeleteClicked = (movieToDelete: MovieDto) => {\n    axiosMovies.deleteMovie(movieToDelete.id)\n      .then(() => {\n        const updatedMovieItems = movieItems.filter(movie => movie.id !== movieToDelete.id);\n        setMovieItems(updatedMovieItems);\n        setAlertData({\n          visible: true,\n          message: `Movie '${movieToDelete.title}' deleted successfully`,\n          alertType: 'success'\n        });\n      });\n  };\n\n  const handleModalClose = () => {\n    setModalData({\n      visible: false,\n      isEditing: false\n    });\n\n  };\n\n  const NUM_OF_CARD_PER_ROW = 3;\n  const cardDesks: Array<JSX.Element[]> = [[]];\n  movieItems.forEach((movieItem: MovieDto) => {\n    if (cardDesks[cardDesks.length - 1].length >= NUM_OF_CARD_PER_ROW) {\n      cardDesks.push([]);\n    }\n    cardDesks[cardDesks.length - 1].push(\n      <Movie\n        key={movieItem.id}\n        data={movieItem}\n        onEdit={() => onMovieEditClicked(movieItem)}\n        onDelete={() => onMovieDeleteClicked(movieItem)}\n      >\n        {movieItem.title}\n      </Movie>\n    );\n  });\n\n  const noMoviesPlaceHolder = (\n    <Col> No Movies Found </Col>\n  );\n\n  const modal = modalData.visible ? (\n    <MovieForm show={modalData.visible} isEditing={modalData.isEditing} onClose={handleModalClose} data={modalData.data}></MovieForm>\n  ) : null;\n\n  return (\n    <>\n      <Row>\n        <Col md=\"auto\">\n          <Button variant=\"primary\" size=\"lg\" className='mb-3' onClick={onMovieAddClicked}>Add Movie</Button>\n        </Col>\n        <Col>\n          {alertData.visible ? <Alert key={1} variant={alertData.alertType || 'primary'}>{alertData.message}</Alert> : null }\n        </Col>\n      </Row>\n      {\n        movieItems.length > 0 ?  cardDesks.map((cards, index) => {\n          return (\n            <CardDeck key={index} className=\"mt-3\">\n              {cards}\n            </CardDeck>\n          );\n        }) : noMoviesPlaceHolder\n      }\n      {modal}\n    </>\n  );\n};\n\nexport default withRouter(Movies);","import './App.css';\n\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport Actors from './containers/Actors/Actors';\nimport Layout from './containers/Layout/Layout';\nimport Movies from './containers/Movies/Movies';\n\nfunction App() {\n  let routes = (\n    <Switch>\n      <Route path=\"/movies\" component={Movies}></Route>\n      <Route exact path=\"/actors\" component={Actors}></Route>\n      <Redirect to=\"/movies\"></Redirect>\n    </Switch>\n  );\n\n  return (\n    <Layout>\n      {routes}\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Movie\":\"Movie_Movie__32w0m\",\"Release_Date\":\"Movie_Release_Date__3_Fur\",\"ActionButtons\":\"Movie_ActionButtons__3ZhgO\"};"],"sourceRoot":""}